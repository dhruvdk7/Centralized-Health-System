{"version":3,"file":"static/js/174.18e164bf.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CheckCircleRounded.js","../node_modules/@mui/icons-material/esm/HighlightOffRounded.js","views/email_verification/index.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.29 16.29 5.7 12.7a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.59 7.59c-.38.39-1.02.39-1.41 0z\"\n}), 'CheckCircleRounded');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13.89 8.7 12 10.59 10.11 8.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41L10.59 12 8.7 13.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l1.89 1.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l1.89-1.89c.39-.39.39-1.02 0-1.41-.39-.38-1.03-.38-1.41 0zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOffRounded');","import { CheckCircleRounded, HighlightOffRounded } from \"@mui/icons-material/\";\nimport {\n    Backdrop,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CircularProgress,\n    FormControl, Typography\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { React, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport image from \"../../assets/login.jpg\";\n\nexport default function EmailVerification() {\n    const [backdrop, setBackdrop] = useState(true);\n    const [token, setToken] = useState(true);\n    const location = useLocation();\n\n    const [Message, setMessage] = useState(\"\");\n    const [Type, setType] = useState(\"\");\n\n    let verifyObj = {\n        verificationCode: token,\n    };\n\n    const verfication = () => {\n        axios\n            .put(\"users/verify\", verifyObj)\n            .then((resp) => {\n                console.log(resp);\n                if (resp.status === 204) {\n                    setBackdrop(false);\n                    setMessage(\"Verification SuccessFull !!\");\n                    setType(\"success\");\n                } else if (\n                    resp.response.status === 401 ||\n                    resp.response.status === 409 ||\n                    resp.response.status === 500 ||\n                    resp.response.status === 400\n                ) {\n                    setBackdrop(false);\n                    setMessage(resp.response.data.message);\n                    setType(\"error\");\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                console.log(error.config);\n                console.log(error.message);\n                console.log(error.response);\n                setBackdrop(false);\n                setMessage(\"Link Expired Please Regiseter Again\");\n                setType(\"error\");\n            });\n    };\n    let runOnce = true;\n    useEffect(() => {\n        if (runOnce) {\n            const searchParams = new URLSearchParams(location.search);\n            setToken(searchParams.get(\"token\"));\n            verfication();\n            runOnce = false;\n        }\n    }, []);\n\n    return (\n        <>\n            <Box\n                display={{ xs: \"none\", md: \"block\" }}\n                sx={{\n                    backgroundImage: `url(${image})`,\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                }}\n            >\n                {!backdrop && (\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            minHeight: \"100vh\",\n                        }}\n                    >\n                        <Card style={{ maxWidth: 400 }}>\n                            <CardContent>\n                                {Type === \"success\" && (\n                                    <CheckCircleRounded\n                                        color={Type}\n                                        fontSize=\"large\"\n                                    />\n                                )}\n\n                                {Type === \"error\" && (\n                                    <HighlightOffRounded\n                                        color={Type}\n                                        fontSize=\"large\"\n                                    />\n                                )}\n\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {Message}\n                                </Typography>\n\n                                {Type === \"success\" && (\n                                    <FormControl\n                                        variant=\"standard\"\n                                        fullWidth\n                                        style={{ marginTop: \"10px\" }}\n                                    >\n                                        <Button\n                                            color=\"primary\"\n                                            onClick={() => { window.location.href = \"/Login\" }}\n                                            fullWidth\n                                            variant=\"contained\"\n                                            style={{\n                                                marginTop: 10,\n                                                alignSelf: \"center\",\n                                            }}\n                                        >\n                                           Login\n                                        </Button>\n                                    </FormControl>\n                                    // <FormControl fullWidth style={{ display: \"inline\", marginTop: 10 }}>\n                                    //     <Link onClick={() => { window.location.href = \"/login\" }}>login</Link>\n                                    // </FormControl>\n                                )}\n\n                                {Type === \"error\" && (\n                                    <FormControl\n                                    variant=\"standard\"\n                                    fullWidth\n                                    style={{ marginTop: \"10px\" }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        onClick={() => { window.location.href = \"/Registration\" }}\n                                        fullWidth\n                                        variant=\"contained\"\n                                        style={{\n                                            marginTop: 10,\n                                            alignSelf: \"center\",\n                                        }}\n                                    >\n                                        Sign Up\n                                    </Button>\n                                </FormControl>\n                                    // <FormControl\n                                    //     fullWidth\n                                    //     style={{\n                                    //         display: \"inline\",\n                                    //         marginTop: 10,\n                                    //     }}\n                                    // >\n                                    //     <Link\n                                    //         onClick={() => {\n                                    //             window.location.href =\n                                    //                 \"/Registration\";\n                                    //         }}\n                                    //     >\n                                    //         Registration\n                                    //     </Link>\n                                    // </FormControl>\n                                )}\n                            </CardContent>\n                        </Card>\n                    </div>\n                )}\n            </Box>\n            {backdrop && (\n                <Backdrop\n                    sx={{\n                        color: \"#fff\",\n                        zIndex: (theme) => theme.zIndex.drawer + 1,\n                    }}\n                    open={backdrop}\n                >\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            )}\n        </>\n    );\n}\n"],"names":["createSvgIcon","_jsx","d","EmailVerification","_useState","useState","_useState2","_slicedToArray","backdrop","setBackdrop","_useState3","_useState4","token","setToken","location","useLocation","_useState5","_useState6","Message","setMessage","_useState7","_useState8","Type","setType","verifyObj","verificationCode","runOnce","useEffect","searchParams","URLSearchParams","search","get","axios","then","resp","console","log","status","response","data","message","catch","error","config","_jsxs","_Fragment","children","Box","display","xs","md","sx","backgroundImage","concat","image","backgroundRepeat","backgroundSize","backgroundPosition","style","alignItems","justifyContent","minHeight","Card","maxWidth","CardContent","CheckCircleRounded","color","fontSize","HighlightOffRounded","Typography","variant","component","FormControl","fullWidth","marginTop","Button","onClick","window","href","alignSelf","Backdrop","zIndex","theme","drawer","open","CircularProgress"],"sourceRoot":""}